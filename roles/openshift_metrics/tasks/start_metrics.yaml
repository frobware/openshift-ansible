---
- command: >
    {{openshift_client_binary}}
    --config={{mktemp.stdout}}/admin.kubeconfig
    get rc
    -l metrics-infra=hawkular-cassandra
    -o name
    -n {{openshift_metrics_project}}
  register: metrics_cassandra_rc
  changed_when: no

- name: Start Hawkular Cassandra
  oc_scale:
    kind: rc
    name: "{{object.split('/')[1]}}"
    kubeconfig: "{{mktemp.stdout}}/admin.kubeconfig"
    namespace: "{{openshift_metrics_project}}"
    replicas: 1
  with_items: "{{metrics_cassandra_rc.stdout_lines}}"
  loop_control:
    loop_var: object
  when: metrics_cassandra_rc is defined
  changed_when: metrics_cassandra_rc | length > 0

- command: >
    {{openshift_client_binary}}
    --config={{mktemp.stdout}}/admin.kubeconfig
    get rc
    -l metrics-infra=hawkular-metrics
    -o name
    -n {{openshift_metrics_project}}
  register: metrics_metrics_rc
  changed_when: no

- name: Start Hawkular Metrics
  oc_scale:
    kind: rc
    name: "{{object.split('/')[1]}}"
    kubeconfig: "{{mktemp.stdout}}/admin.kubeconfig"
    namespace: "{{openshift_metrics_project}}"
    replicas: "{{openshift_metrics_hawkular_replicas}}"
  with_items: "{{metrics_metrics_rc.stdout_lines}}"
  loop_control:
    loop_var: object
  changed_when: metrics_metrics_rc | length > 0

- command: >
    {{openshift_client_binary}}
    --config={{mktemp.stdout}}/admin.kubeconfig
    get rc
    -l metrics-infra=heapster
    -o name
    -n {{openshift_metrics_project}}
  register: metrics_heapster_rc
  changed_when: no

- name: Start Heapster
  oc_scale:
    kind: rc
    name: "{{object.split('/')[1]}}"
    kubeconfig: "{{mktemp.stdout}}/admin.kubeconfig"
    namespace: "{{openshift_metrics_project}}"
    replicas: 1
  with_items: "{{metrics_heapster_rc.stdout_lines}}"
  loop_control:
    loop_var: object

- name: Generate metrics-server deployment
  template:
    src: metrics-server-deployment.j2
    dest: "{{ mktemp.stdout }}/templates/metrics-server-deployment.yaml"

- find:
    paths: "{{ mktemp.stdout }}/templates"
    patterns: "^metrics-server-deployment.yaml"
    use_regex: true
  register: metrics_server_deployment_object_def_files

- slurp:
    src: "{{item.path}}"
  register: metrics_server_deployment_object_def_files
  with_items: "{{ metrics_server_deployment_object_def_files.files }}"

- name: Create Metrics Server objects
  include_tasks: oc_apply.yaml
  vars:
    kubeconfig: "{{ mktemp.stdout }}/admin.kubeconfig"
    namespace: "{{ openshift_metrics_server_project }}"
    file_name: "{{ item.source }}"
    file_content: "{{ item.content | b64decode | from_yaml }}"
  with_items: "{{ metrics_server_deployment_object_def_files.results }}"
